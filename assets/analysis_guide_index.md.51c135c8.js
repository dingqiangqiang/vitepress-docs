import{_ as s,c as e,o as n,V as a}from"./chunks/framework.85f79a96.js";const o="/vitepress-docs/assets/mind.0a4989ca.png",g=JSON.parse('{"title":"前言","description":"","frontmatter":{},"headers":[],"relativePath":"analysis/guide/index.md","filePath":"analysis/guide/index.md","lastUpdated":1713352951000}'),p={name:"analysis/guide/index.md"},t=a('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><p>目前社区有很多 Vue.js 的源码解析文章，但是质量层次不齐，不够系统和全面，这本电子书的目标是全方位细致深度解析 Vue.js 的实现原理，让同学们可以彻底掌握 Vue.js。目前分析的版本是 Vue.js 的最新版本 Vue.js 2.5.17-beta.0，并且之后会随着版本升级而做相应的更新，充分发挥电子书的优势。</p><h2 id="章节目录" tabindex="-1">章节目录 <a class="header-anchor" href="#章节目录" aria-label="Permalink to &quot;章节目录&quot;">​</a></h2><p>为了把 Vue.js 的源码讲明白，课程设计成由浅入深，分为核心、编译、扩展、生态四个方面去讲，并拆成了八个章节，如下图：</p><p><img src="'+o+`" alt="An image"></p><p><strong>第一章：准备工作</strong></p><p>介绍了 Flow、Vue.js 的源码目录设计、Vue.js 的源码构建方式，以及从\b入口开始分析了 Vue.js 的初始化过程。</p><p><strong>第二章：数据驱动</strong></p><p>详细讲解了模板数据到 DOM 渲染的过程，从 <code>new Vue</code> 开始，分析了 <code>mount</code>、<code>render</code>、<code>update</code>、<code>patch</code> 等流程。</p><p><strong>第三章：组件化</strong></p><p>分析了组件化的实现原理，并且分析了组件周边的原理实现，包括合并配置、生命周期、组件注册、异步组件。</p><p><strong>第四章：深入响应式原理</strong></p><p>详细讲解了数据的变化如何驱动视图的变化，分析了响应式对象的创建，依赖收集、派发更新的实现过程，一些特殊情况的处理，并对比了计算属性和侦听属性的实现，最后分析了组件更新的过程。</p><p><strong>第五章：编译</strong></p><p>从编译的入口函数开始，分析了编译的三个核心流程的实现：<code>parse</code> -&gt; <code>optimize</code> -&gt; <code>codegen</code>。</p><p><strong>第六章：扩展</strong></p><p>详细讲解了 <code>event</code>、<code>v-model</code>、<code>slot</code>、<code>keep-alive</code>、<code>transition</code>、<code>transition-group</code> 等常用功能的原理实现，该章节作为一个可扩展章节，未来会分析更多 Vue 提供的特性。</p><p><strong>第七章：Vue-Router</strong></p><p>分析了 Vue-Router 的实现原理，从路由注册开始，分析了路由对象、<code>matcher</code>，并深入分析了整个路径切换的实现过程和细节。</p><p><strong>第八章：Vuex</strong></p><p>分析了 Vuex 的实现原理，深入分析了它的初始化过程，常用 API 以及插件部分的实现。</p><h2 id="如何调试源码" tabindex="-1">如何调试源码 <a class="header-anchor" href="#如何调试源码" aria-label="Permalink to &quot;如何调试源码&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Vue </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// vue 导入入口</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">、找到 node_modules</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">vue</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">package.json 中的入口配置</span></span>
<span class="line"><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">、{ </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;main&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;dist/vue.runtime.common.js&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;dist/vue.runtime.esm.js&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">、找到 dist</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">vue.esm.js 开始调试</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,23),l=[t];function r(c,d,i,u,E,m){return n(),e("div",null,l)}const _=s(p,[["render",r]]);export{g as __pageData,_ as default};
